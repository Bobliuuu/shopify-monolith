{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.6", "generated_at": "2025-07-29T23:25:25.459940Z", "invocation_id": "14d13208-ed61-4467-ab76-70d8aa7d2e62", "invocation_started_at": "2025-07-29T23:25:24.234279Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T23:25:25.384955Z", "completed_at": "2025-07-29T23:25:25.388475Z"}, {"name": "execute", "started_at": "2025-07-29T23:25:25.388664Z", "completed_at": "2025-07-29T23:25:25.438168Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0539858341217041, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.shopify_monolith.shopify_transactions_base", "compiled": true, "compiled_code": "-- Base table for Shopify transactions\n-- Combines multiple source tables into a unified base table\n-- Currently testing with self-union, but designed to union different source tables\n-- In production, this would reference actual source tables like:\n-- from source('shopify_raw', 'transactions_table_1')\n\nwith base_table_1 as (\n    select \n        'TXN_' || cast(row_number() over () as varchar) as transaction_id,\n        'ORD_' || cast(row_number() over () as varchar) as order_id,\n        'CUST_' || cast(row_number() over () as varchar) as customer_id,\n        case \n            when random() < 0.3 then 'pending'\n            when random() < 0.6 then 'completed'\n            else 'failed'\n        end as transaction_status,\n        case \n            when random() < 0.4 then 'credit_card'\n            when random() < 0.7 then 'paypal'\n            else 'shop_pay'\n        end as payment_method,\n        round(random() * 1000 + 10, 2) as transaction_amount,\n        round(random() * 50 + 5, 2) as tax_amount,\n        round(random() * 20 + 2, 2) as shipping_amount,\n        'USD' as currency,\n        current_timestamp - interval '1 day' * random() * 30 as created_at,\n        current_timestamp - interval '1 day' * random() * 30 as updated_at,\n        case \n            when random() < 0.8 then 'US'\n            when random() < 0.9 then 'CA'\n            else 'UK'\n        end as country_code,\n        case \n            when random() < 0.7 then 'online'\n            else 'in_store'\n        end as sales_channel,\n        'table_1' as source_table\n    from range(1, 500)\n),\n\nbase_table_2 as (\n    select \n        'TXN_' || cast(row_number() over () + 500 as varchar) as transaction_id,\n        'ORD_' || cast(row_number() over () + 500 as varchar) as order_id,\n        'CUST_' || cast(row_number() over () + 500 as varchar) as customer_id,\n        case \n            when random() < 0.3 then 'pending'\n            when random() < 0.6 then 'completed'\n            else 'failed'\n        end as transaction_status,\n        case \n            when random() < 0.4 then 'credit_card'\n            when random() < 0.7 then 'paypal'\n            else 'shop_pay'\n        end as payment_method,\n        round(random() * 1000 + 10, 2) as transaction_amount,\n        round(random() * 50 + 5, 2) as tax_amount,\n        round(random() * 20 + 2, 2) as shipping_amount,\n        'USD' as currency,\n        current_timestamp - interval '1 day' * random() * 30 as created_at,\n        current_timestamp - interval '1 day' * random() * 30 as updated_at,\n        case \n            when random() < 0.8 then 'US'\n            when random() < 0.9 then 'CA'\n            else 'UK'\n        end as country_code,\n        case \n            when random() < 0.7 then 'online'\n            else 'in_store'\n        end as sales_channel,\n        'table_2' as source_table\n    from range(1, 500)\n),\n\ncombined_base as (\n    select * from base_table_1\n    union all\n    select * from base_table_2\n)\n\nselect * from combined_base", "relation_name": "\"shopify_monolith\".\"main_dev\".\"shopify_transactions_base\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-29T23:25:25.441145Z", "completed_at": "2025-07-29T23:25:25.442784Z"}, {"name": "execute", "started_at": "2025-07-29T23:25:25.442972Z", "completed_at": "2025-07-29T23:25:25.455988Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015554189682006836, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.shopify_monolith.fct_shopify_transactions", "compiled": true, "compiled_code": "-- Fact table for Shopify transactions with calculated fields\n-- References the base table from staging/shopify/base\n\nselect \n  transaction_id,\n  order_id,\n  customer_id,\n  transaction_status,\n  payment_method,\n  transaction_amount,\n  tax_amount,\n  shipping_amount,\n  currency,\n  created_at,\n  updated_at,\n  country_code,\n  sales_channel,\n  source_table,\n  -- Add some calculated fields\n  transaction_amount + tax_amount + shipping_amount as total_amount,\n  case \n    when transaction_status = 'completed' then transaction_amount\n    else 0\n  end as successful_amount,\n  case \n    when created_at >= current_timestamp - interval '7 days' then 'recent'\n    when created_at >= current_timestamp - interval '30 days' then 'recent_month'\n    else 'older'\n  end as transaction_recency,\n  -- Additional business logic\n  case \n    when transaction_amount >= 1000 then 'high_value'\n    when transaction_amount >= 500 then 'medium_value'\n    else 'low_value'\n  end as transaction_value_category,\n  case \n    when payment_method = 'credit_card' then 'card'\n    when payment_method = 'paypal' then 'digital_wallet'\n    else 'shop_pay'\n  end as payment_category\nfrom \"shopify_monolith\".\"main_dev\".\"shopify_transactions_base\"", "relation_name": "\"shopify_monolith\".\"main_dev\".\"fct_shopify_transactions\"", "batch_results": null}], "elapsed_time": 0.20687627792358398, "args": {"introspect": true, "vars": {}, "state_modified_compare_more_unrendered_values": false, "partial_parse_file_diff": true, "log_format": "default", "require_generic_test_arguments_property": false, "log_file_max_bytes": 10485760, "log_path": "/Users/jhome/Documents/GitHub/shopify-monolith/data/logs", "require_nested_cumulative_type_params": false, "source_freshness_run_project_hooks": true, "strict_mode": false, "upload_to_artifacts_ingest_api": false, "print": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "skip_nodes_if_on_run_start_fails": false, "state_modified_compare_vars": false, "static_parser": true, "send_anonymous_usage_stats": true, "quiet": false, "printer_width": 80, "version_check": true, "log_level": "info", "indirect_selection": "eager", "require_batched_execution_for_custom_microbatch_strategy": false, "require_resource_names_without_spaces": true, "validate_macro_args": false, "use_fast_test_edges": false, "show_resource_report": false, "empty": false, "require_all_warnings_handled_by_warn_error": false, "use_colors": true, "which": "run", "defer": false, "partial_parse": true, "profiles_dir": "/Users/jhome/Documents/GitHub/shopify-monolith/data", "populate_cache": true, "cache_selected_only": false, "show_all_deprecations": false, "log_format_file": "debug", "project_dir": "/Users/jhome/Documents/GitHub/shopify-monolith/data", "select": [], "exclude": [], "invocation_command": "dbt run", "require_explicit_package_overrides_for_builtin_materializations": true, "macro_debugging": false, "log_level_file": "debug", "require_yaml_configuration_for_mf_time_spines": false, "write_json": true, "use_colors_file": true, "favor_state": false}}